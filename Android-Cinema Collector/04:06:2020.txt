package com.example.cinemacollector;
// здесь логика
// при нажатии на кнопку поиска проверяются правильно ли введены годы поиска

import androidx.appcompat.app.AppCompatActivity;
import java.net.HttpURLConnection;
import java.net.URL;
import org.json.JSONException;

import android.content.Context;
import android.content.SharedPreferences;
import android.os.Bundle;
import android.text.Editable;
import android.text.TextWatcher;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.RadioGroup;
import android.widget.TextView;
import android.widget.Toast;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;
import java.util.Calendar;

import org.json.JSONException;



public class MainActivity extends AppCompatActivity {

    public static String APP_PREFERENCES = "mysettings";
    public static int year = Calendar.getInstance().get(Calendar.YEAR);
    public static int APP_PREFERENCES_status = 1;
    public static String APP_PREFERENCES_year_1_S = "";
    public static String APP_PREFERENCES_year_2_S = "";
    public static int APP_PREFERENCES_year_1 = year;
    public static int APP_PREFERENCES_year_2 = year;
    public static int APP_PREFERENCES_rating = 1;
    SharedPreferences mSettings;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        mSettings = getSharedPreferences(APP_PREFERENCES, Context.MODE_PRIVATE);
        Button button = (Button) findViewById(R.id.buttonSearch);
        button.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                onClickGo();
            }
        });

        RadioGroup StatusGroup = (RadioGroup) findViewById(R.id.StatusGroup);
        StatusGroup.setOnCheckedChangeListener(new RadioGroup.OnCheckedChangeListener() {
            @Override
            public void onCheckedChanged(RadioGroup group, int checkedId) {
                SharedPreferences.Editor editor = mSettings.edit();
                switch (checkedId) {
                    case -1:
                        editor.putInt(String.valueOf(APP_PREFERENCES_status), 1);
                        editor.apply();
                        break;
                    case R.id.status1:
                        editor.putInt(String.valueOf(APP_PREFERENCES_status), 1);
                        editor.apply();
                        break;
                    case R.id.status2:
                        editor.putInt(String.valueOf(APP_PREFERENCES_status), 2);
                        editor.apply();
                        break;
                    case R.id.status3:
                        editor.putInt(String.valueOf(APP_PREFERENCES_status), 3);
                        editor.apply();
                        break;
                    case R.id.status4:
                        editor.putInt(String.valueOf(APP_PREFERENCES_status), 4);
                        editor.apply();
                        break;
                    default:
                        break;
                }
            }
        });


    EditText editTextYearFrom = (EditText) findViewById(R.id.yearFrom);
        editTextYearFrom.setText(Integer.toString(year));
    EditText editTextYearTo = (EditText) findViewById(R.id.yearTo);
        editTextYearTo.setText(Integer.toString(year));

        }

    public void onClickGo(){

        EditText editTextYear1 = (EditText) findViewById(R.id.yearFrom);
        APP_PREFERENCES_year_1_S = editTextYear1.getText().toString();
        EditText editTextYear2 = (EditText) findViewById(R.id.yearTo);
        APP_PREFERENCES_year_2_S = editTextYear2.getText().toString();

        if(!APP_PREFERENCES_year_2_S.equals("")) {
            APP_PREFERENCES_year_2 = Integer.parseInt(APP_PREFERENCES_year_2_S); // если год 2 заполнен, парсим год
        } else {
            APP_PREFERENCES_year_2 = year; // если год 2 не заполнен, ставим текущий
        }
        if(! APP_PREFERENCES_year_1_S.equals("")) {
            APP_PREFERENCES_year_1 = Integer.parseInt( APP_PREFERENCES_year_1_S); // если год 1 заполнен, парсим год
        } else {
            APP_PREFERENCES_year_1 = APP_PREFERENCES_year_2; // если год 1 не заполнен, ставим тот же, что во втором поле
        }
        if(APP_PREFERENCES_year_2 > 1900 && APP_PREFERENCES_year_2 <= year){
        } else {
            APP_PREFERENCES_year_2 = year; // если вне указанных значений, то ставим текущий
        }
        if(APP_PREFERENCES_year_1 > 1900 && APP_PREFERENCES_year_1 <= year){
        } else {
            APP_PREFERENCES_year_1 = APP_PREFERENCES_year_2; // если вне указанных значений, то ставим из года 2
        }
        if(APP_PREFERENCES_year_1 > APP_PREFERENCES_year_2){
            APP_PREFERENCES_year_2 = APP_PREFERENCES_year_1;// если год 2 меньше год 1 то ставим год 2 = год 1
        }

        editTextYear1.setText(Integer.toString(APP_PREFERENCES_year_1));
        editTextYear2.setText(Integer.toString(APP_PREFERENCES_year_2));
/*
        SharedPreferences.Editor editor = mSettings.edit();
        editor.putInt(String.valueOf(APP_PREFERENCES_status), 1);
        editor.apply();

*/


    }


    public void connection () throws IOException, JSONException {
        String requestUrl = "https://api.themoviedb.org/3/authentication/guest_session/new?api_key=358d127cfc98138fe9a600b0b63bd94f";
        URL url = new URL(requestUrl);
        HttpURLConnection connection = (HttpURLConnection) url.openConnection();
    }
}
