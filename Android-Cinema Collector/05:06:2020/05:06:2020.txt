package com.example.cinemacollector;

// настройки поиска будут записываться в SharedPreferences
// чуть позже допишу код, который будет проверять при запуске, есть ли там что то, чтобы сохранялись предыдущие параметры поиска
// статусы фильмов будут писаться туда же или может быть запилю в SQLite но не уверен, так как там будет всего лишь id фильма и номер статуса
// после нажатия кнопки будут открываться фильмы
// хочу сделать классическую навигацию по списку фильмов в стиле 1, 2, 3, ... 999 а не бесконечный прокручивающийся список,
// и будет поле для ввода для перехода на страницу списка

import androidx.appcompat.app.AppCompatActivity;
import java.net.HttpURLConnection;
import java.net.URL;
import org.json.JSONException;

import android.content.Context;
import android.content.SharedPreferences;
import android.os.Bundle;
import android.text.Editable;
import android.text.TextWatcher;
import android.view.View;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.RadioGroup;
import android.widget.TextView;
import android.widget.Toast;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;
import java.util.Calendar;

import org.json.JSONException;



public class MainActivity extends AppCompatActivity {

    public static int year = Calendar.getInstance().get(Calendar.YEAR);
    public static int APP_PREFERENCES_status = 1;
    public static String APP_PREFERENCES_year_1_S = "";
    public static String APP_PREFERENCES_year_2_S = "";
    public static int APP_PREFERENCES_year_1 = year;
    public static int APP_PREFERENCES_year_2 = year;
    public static int APP_PREFERENCES_rating = 1;
    public static boolean country1 = true;
    public static boolean country2 = true;
    public static boolean country3 = true;
    public static boolean country4 = true;
    public static boolean country5 = true;
    SharedPreferences mSettings;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        mSettings = getSharedPreferences("mysettings", Context.MODE_PRIVATE);

        Button button = (Button) findViewById(R.id.buttonSearch);
        button.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                onClickGo();
            }
        });

        RadioGroup StatusGroup = (RadioGroup) findViewById(R.id.StatusGroup);
        StatusGroup.setOnCheckedChangeListener(new RadioGroup.OnCheckedChangeListener() {
            @Override
            public void onCheckedChanged(RadioGroup group, int checkedId) {
                switch (checkedId) {
                    case -1:
                        APP_PREFERENCES_status = 1;
                        break;
                    case R.id.status1:
                        APP_PREFERENCES_status = 1;
                        break;
                    case R.id.status2:
                        APP_PREFERENCES_status = 2;
                        break;
                    case R.id.status3:
                        APP_PREFERENCES_status = 3;
                        break;
                    case R.id.status4:
                        APP_PREFERENCES_status = 4;
                        break;
                    default:
                        break;
                }
            }
        });

        RadioGroup RatingGroup = (RadioGroup) findViewById(R.id.RatingGroup);
        RatingGroup.setOnCheckedChangeListener(new RadioGroup.OnCheckedChangeListener() {
            @Override
            public void onCheckedChanged(RadioGroup group, int checkedId) {
                SharedPreferences.Editor editor = mSettings.edit();
                switch (checkedId) {
                    case -1:
                        APP_PREFERENCES_rating = 1;
                        break;
                    case R.id.rating1:
                        APP_PREFERENCES_rating = 1;
                        break;
                    case R.id.rating2:
                        APP_PREFERENCES_rating = 2;
                        break;
                    case R.id.rating3:
                        APP_PREFERENCES_rating = 3;
                        break;
                    case R.id.rating4:
                        APP_PREFERENCES_rating = 4;
                        break;
                    case R.id.rating5:
                        APP_PREFERENCES_rating = 5;
                        break;
                    case R.id.rating6:
                        APP_PREFERENCES_rating = 6;
                        break;
                    case R.id.rating7:
                        APP_PREFERENCES_rating = 7;
                        break;
                    case R.id.rating8:
                        APP_PREFERENCES_rating = 8;
                        break;
                    case R.id.rating9:
                        APP_PREFERENCES_rating = 9;
                        break;
                    default:
                        APP_PREFERENCES_rating = 1;
                        break;
                }
            }
        });






    EditText editTextYearFrom = (EditText) findViewById(R.id.yearFrom);
        editTextYearFrom.setText(Integer.toString(year));
    EditText editTextYearTo = (EditText) findViewById(R.id.yearTo);
        editTextYearTo.setText(Integer.toString(year));

        }

    public void onClickGo(){

        EditText editTextYear1 = (EditText) findViewById(R.id.yearFrom);
        APP_PREFERENCES_year_1_S = editTextYear1.getText().toString();
        EditText editTextYear2 = (EditText) findViewById(R.id.yearTo);
        APP_PREFERENCES_year_2_S = editTextYear2.getText().toString();

        if(!APP_PREFERENCES_year_2_S.equals("")) {
            APP_PREFERENCES_year_2 = Integer.parseInt(APP_PREFERENCES_year_2_S); // если год 2 заполнен, парсим год
        } else {
            APP_PREFERENCES_year_2 = year; // если год 2 не заполнен, ставим текущий
        }
        if(! APP_PREFERENCES_year_1_S.equals("")) {
            APP_PREFERENCES_year_1 = Integer.parseInt( APP_PREFERENCES_year_1_S); // если год 1 заполнен, парсим год
        } else {
            APP_PREFERENCES_year_1 = APP_PREFERENCES_year_2; // если год 1 не заполнен, ставим тот же, что во втором поле
        }
        if(APP_PREFERENCES_year_2 > 1900 && APP_PREFERENCES_year_2 <= year){
        } else {
            APP_PREFERENCES_year_2 = year; // если вне указанных значений, то ставим текущий
        }
        if(APP_PREFERENCES_year_1 > 1900 && APP_PREFERENCES_year_1 <= year){
        } else {
            APP_PREFERENCES_year_1 = APP_PREFERENCES_year_2; // если вне указанных значений, то ставим из года 2
        }
        if(APP_PREFERENCES_year_1 > APP_PREFERENCES_year_2){
            APP_PREFERENCES_year_2 = APP_PREFERENCES_year_1;// если год 2 меньше год 1 то ставим год 2 = год 1
        }

        editTextYear1.setText(Integer.toString(APP_PREFERENCES_year_1));
        editTextYear2.setText(Integer.toString(APP_PREFERENCES_year_2));


        CheckBox checkBox1 = (CheckBox)findViewById(R.id.country1);
        CheckBox checkBox2 = (CheckBox)findViewById(R.id.country2);
        CheckBox checkBox3 = (CheckBox)findViewById(R.id.country3);
        CheckBox checkBox4 = (CheckBox)findViewById(R.id.country4);
        CheckBox checkBox5 = (CheckBox)findViewById(R.id.country5);

        if(checkBox1.isChecked()) {
            country1 = true;
        } else {
            country1 = false;
        }
        if(checkBox2.isChecked()) {
            country2 = true;
        } else {
            country2 = false;
        }
        if(checkBox3.isChecked()) {
            country3 = true;
        } else {
            country3 = false;
        }
        if(checkBox4.isChecked()) {
            country4 = true;
        } else {
            country4 = false;
        }
        if(checkBox5.isChecked()) {
            country5 = true;
        } else {
            country5 = false;
        }

        SharedPreferences.Editor editor = mSettings.edit();
        editor.putInt("APP_PREFERENCES_year_1", APP_PREFERENCES_year_1);
        editor.putInt("APP_PREFERENCES_year_2", APP_PREFERENCES_year_2);
        editor.putInt("APP_PREFERENCES_status", APP_PREFERENCES_status);
        editor.putBoolean("APP_PREFERENCES_country_1", country1);
        editor.putBoolean("APP_PREFERENCES_country_2", country2);
        editor.putBoolean("APP_PREFERENCES_country_3", country3);
        editor.putBoolean("APP_PREFERENCES_country_4", country4);
        editor.putBoolean("APP_PREFERENCES_country_5", country5);
        editor.putInt("APP_PREFERENCES_rating", APP_PREFERENCES_rating);
        editor.apply();



    }


    public void connection () throws IOException, JSONException {
        String requestUrl = "https://api.themoviedb.org/3/authentication/guest_session/new?api_key=358d127cfc98138fe9a600b0b63bd94f";
        URL url = new URL(requestUrl);
        HttpURLConnection connection = (HttpURLConnection) url.openConnection();
    }
}
